{"version":3,"sources":["Components/NewProduct.js","Components/ProductList.js","Components/OneProduct.js","Components/EditProduct.js","App.js","index.js"],"names":["NewProduct","props","useState","title","setTitle","price","setPrice","description","setDescription","errors","setErrors","titleErrors","setTitleErrors","setPriceErrors","setDescriptionErrors","history","useHistory","className","onSubmit","e","preventDefault","target","key","name","value","length","newProduct","axios","post","then","res","console","log","data","push","_id","catch","err","errorResponse","response","errorArr","Object","keys","message","handleNewProductSubmit","map","index","style","color","onChange","type","ProductList","allProducts","setAllProducts","useEffect","get","product","to","onClick","productId","delete","filter","id","likes","undefined","editedProduct","like","put","updatedProduct","updatedProducts","handleLikeClick","cursor","outline","LikeCount","Product","setProduct","useParams","src","alt","EditProduct","handleOnChange","keyBeingUpdated","newValue","handleEditSubmit","App","exact","from","path","OneProduct","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7a71718.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst NewProduct = (props) => {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [price, setPrice] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");;\r\n    //Create an array to store errors from the API\r\n    const [errors, setErrors] = useState([]); \r\n    // Error fields\r\n    const [titleErrors, setTitleErrors] = useState(\"\");\r\n    const [priceErrors, setPriceErrors] = useState(\"\");\r\n    const [descriptionErrors, setDescriptionErrors] = useState(\"\");\r\n  // Used for routing the user to a new url.\r\n    const history = useHistory();\r\n\r\n  const handleNewProductSubmit = (e) => {\r\n    e.preventDefault(); // Stop the page refresh.// The default form behavior is submitting the information to the route in the \"action\" which causes a page load. We want to handle this information ourselves.\r\n        const { name: key , value} = e.target;\r\n    \r\n        if (key === 'title') {\r\n            setTitle(value);\r\n            if(value.length < 2) {\r\n                setTitleErrors(\"Title must be at least 2 characters\");\r\n            } else {\r\n                setTitleErrors(\"\");\r\n            }\r\n        } else if (key === 'price') {\r\n            setPrice(value);\r\n            if(value.length < 2) {\r\n                setPriceErrors(\"Price must be at least 2 characters\");\r\n            } else {\r\n                setPriceErrors(\"\");\r\n            }\r\n        } else if (key === 'description') {\r\n            setDescription(value);\r\n            if(value.length < 5) {\r\n                setDescriptionErrors(\"Description name must be at least 5 characters\");\r\n            } else {\r\n                setDescriptionErrors(\"\");\r\n            }\r\n        }\r\n    const newProduct = {\r\n      title,\r\n      price,\r\n      description,\r\n    };\r\n\r\n    axios\r\n      .post(\"http://localhost:8000/api/products/\", newProduct)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        // Route user to the new destination's page.\r\n        history.push(`/${res.data._id}`);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        const errorResponse = err.response.data.errors; // Get the errors from err.response.data\r\n        const errorArr = []; // Define a temp error array to push the messages in\r\n                for (const key of Object.keys(errorResponse)) { // Loop through all errors and get the messages\r\n                    errorArr.push(errorResponse[key].message)\r\n                }\r\n                // Set Errors\r\n                setErrors(errorArr);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\" d-flex col col-8 flex-column container p-3 my-3 bg-dark text-white rounded shadow\">\r\n      <h3 className=\"text-center\">Add a New Product</h3>\r\n\r\n      <form\r\n        onSubmit={(e) => {\r\n          handleNewProductSubmit(e);\r\n        }}\r\n      >\r\n        {/* // adding validation messages */}\r\n        {errors.map((err, index) => \r\n          <p style={{color: \"red\"}} key={index}>{err}</p>)}\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"h6\">Title</label>\r\n          <input\r\n            onChange={(e) => {\r\n              setTitle(e.target.value);\r\n            }}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n          />\r\n          \r\n          { titleErrors ? <p >{titleErrors}</p> : \"\"} \r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"h6\">Price</label>\r\n          <input\r\n            onChange={(e) => {\r\n              setPrice(e.target.value);\r\n            }}\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label className=\"h6\">Description</label>\r\n          <input\r\n            onChange={(e) => {\r\n              setDescription(e.target.value);\r\n            }}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n        <button className=\"btn btn-sm btn-success m-2 btn-outline\">Create</button>\r\n      </form>\r\n      {/* <div className=\"d-flex col flex-column container p-3 my-3 bg-dark text-white\">\r\n                <p>Title: {title}</p>\r\n                <p>Price: {price}</p>\r\n                <p>Description: {description}</p>\r\n            </div> */}\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default NewProduct;","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router';\r\n\r\n\r\nconst ProductList = (props) => {\r\n    const [allProducts, setAllProducts] = useState([]);\r\n    // const [product, setProduct] = useState([]);\r\n    // const [products, setProducts] = useState([]);\r\n    // const history = useHistory();\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8000/api/products/all\")\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                setAllProducts(res.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, []);\r\n\r\n    // Delete function in controller takes an ID and returns deleted\r\n    // Pass in the ID and and refresh the page with the deleted item filtered out\r\n    // We need to remove a value from state using filter\r\n    const deleteProduct = (e, productId) => {\r\n        axios.delete(\"http://localhost:8000/api/products/\" + productId)\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                setAllProducts(allProducts.filter((product) => product._id !== productId));\r\n                // uses setallproducts to access state and filter through our product array and only return where the ID which we just passed to be deleted not in the list\r\n            }\r\n            )\r\n    }\r\n    // const routeChange = () =>{ \r\n    //     let path = `/${product._id}/edit`; \r\n    //     history.push(path);\r\n    //   }\r\n    const handleLikeClick = (id, likes) => {\r\n        console.log(id, likes,\"hello\");\r\n        if (likes == undefined) {\r\n            likes = 0;\r\n        }\r\n        const editedProduct = { like: likes + 1 };\r\n        \r\n            axios\r\n            .put(\"http://localhost:8000/api/products/\" + id, editedProduct)\r\n            .then((res) => {\r\n                const updatedProduct = res.data;\r\n\r\n                const updatedProducts = allProducts.map((product) => {\r\n                    if (product._id === id) {\r\n                    return updatedProduct;\r\n                } \r\n                return product;\r\n           })\r\n                setAllProducts(updatedProducts);\r\n                console.log(\"liked\");\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    return (\r\n        <body>\r\n            <div className=\"d-flex col col-12 flex-column container p-3 my-3 bg-dark text-white rounded shadow shadow-lg table table-striped\">\r\n                <table>\r\n                    <thead>\r\n                        <th>Title</th>\r\n                        <th>Price</th>\r\n                        <th>Description</th>\r\n                        <th>Actions</th>\r\n                    </thead>\r\n                    <tbody>\r\n                        {/* take the products from state and map to each of the products */}\r\n                        {\r\n                            allProducts.map((product, index) => (\r\n                                <tr>\r\n                                    <td><Link to={`/products/${product._id}`}> {product.title} </Link></td>\r\n                                    <td> {product.price}</td>\r\n                                    <td> {product.description}</td>\r\n                                    <td>\r\n                                        <Link to={`/products/${product._id}/edit`} className=\"btn btn-sm btn-warning m-2 btn-outline\">Edit</Link>\r\n                                        <button onClick={(e) => deleteProduct(e, product._id)} className=\"btn btn-sm btn-danger m-2 btn-outline\">Delete</button>\r\n                                        <p onClick = {() => handleLikeClick(product._id, product.like)} style={{ cursor: \"pointer\" , outline: \"none\"}}> &#128175;{product.LikeCount}</p>\r\n                                        {/* //&#x270B; */}\r\n                                    </td>\r\n                                    <td> {product.like} </td>\r\n                                </tr>\r\n                            )\r\n                            )\r\n\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </body>\r\n    )\r\n};\r\n\r\nexport default ProductList;","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router\";\r\n\r\n\r\nconst Product = (props) => {\r\n    const [product, setProduct] = useState(null);\r\n    const history = useHistory();\r\n    const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:8000/api/products/${id}`)\r\n      .then((res) => {\r\n        setProduct(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [id]);\r\n  // The response hasn't come back yet so we want to to return loading... so the user made aware\r\n  if (product === null) {\r\n    return \"Loading...\";\r\n  }\r\n\r\n  const deleteProduct = (e, productId) => {\r\n    axios.delete(\"http://localhost:8000/api/products/\" + productId)\r\n    .then((res) => {\r\n        console.log(res.data);\r\n        history.push(`/all`);\r\n        // setAllProducts(allProducts.filter((product) => product._id !== productId)); \r\n        // uses setallproducts to access state and filter through our product array and only return where the ID which we just passed to be deleted not in the list\r\n    }\r\n    )\r\n}\r\n\r\n\r\n    return (\r\n    <div className=\"d-flex col col-12 flex-column container p-3 my-3 bg-dark text-white rounded shadow justify-text-center\">\r\n      <h1>{product.title}</h1>\r\n      <h4 className= \"fst-italic\">{product.description}</h4>\r\n      <br></br>\r\n      <h2>$ {product.price}</h2>\r\n      <img src=\"\" alt=\"\"></img>\r\n          <div className=\"d-flex\">\r\n          <button onClick= { (e) => deleteProduct(e, product._id)} className=\"col col-1 btn btn-sm btn-danger m-2 btn-outline\">Delete</button>\r\n          <Link to={`/products/${product._id}/edit`} className=\"col col-1 btn btn-sm btn-warning m-2 btn-outline\">Edit</Link>\r\n        </div >\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;","import React, { useEffect, useState } from \"react\"; // Usestate the app knows when to render the data\r\nimport axios from \"axios\";\r\nimport { Redirect, useHistory, useParams } from \"react-router-dom\";\r\n\r\nconst EditProduct = (props) => {\r\n    const [product, setProduct] = useState(\"\");\r\n    const [errors, setErrors] = useState(null);\r\n    const history = useHistory(); //using history to keep track of the routes/pages you are going to so you can go back and forth\r\n    const { id } = useParams();\r\n    \r\n\r\n  /* \r\n  Empty arr as second argument means this will only happen on the first render\r\n  of this component.\r\n  */\r\n    // Get the data using UseEffect when the page first loads\r\n    // using axios to get the data so it is prefilled for the item/id that is selected\r\n    useEffect(() => {\r\n    axios\r\n        .get(`http://localhost:8000/api/products/` + id)\r\n        .then((res) => {\r\n            setProduct(res.data);\r\n    })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }, [id]);\r\n\r\n    const handleOnChange = (e) => {\r\n        const keyBeingUpdated = e.target.name;\r\n        const newValue = e.target.value;\r\n    \r\n        setProduct({ ...product, [keyBeingUpdated]: newValue });\r\n        \r\n        // Neil showed two ways one with setting each state, and one with\r\n        // combining into a handler since we will be passing an onject\r\n        /* The setDest above can be written like this: */\r\n        // const updatedDest = {...dest}\r\n        // updatedDest[keyBeingUpdated] = newValue;\r\n        // setDest(updatedDest)\r\n    };\r\n    \r\n    const handleEditSubmit = (e) => {\r\n        e.preventDefault(); \r\n        axios\r\n            .put(\"http://localhost:8000/api/products/\" + product._id + \"/edit\", product)\r\n            .then((res) => {\r\n                console.log(res.data);\r\n            // Route user to the new destination's page.\r\n                history.push(`/products/${product._id}`);\r\n            })\r\n            .catch((err) => {\r\n            // THIS CATCH only triggers because our controller uses\r\n            // res.status(400).json(err);\r\n            setErrors(err.response.data.errors);\r\n            console.log(err.response);\r\n            });\r\n        };\r\n        if (product === null) {\r\n            return \"Loading...\";\r\n        }\r\n        // using this for the Cancel button\r\n        const routeChange = () =>{ \r\n            let path = `/products/all`; \r\n            history.push(path); \r\n          }\r\n        return (\r\n        <div className=\"d-flex col col-8 flex-column container p-3 my-3 bg-dark text-white rounded shadow justify-text-center shadow\">\r\n            <h3 className=\"text-center\">Edit Your Product</h3>\r\n            <form\r\n            onSubmit={(e) => {\r\n            handleEditSubmit(e);\r\n            }}\r\n        >\r\n            <div className=\"form-group\">\r\n                <label className=\"h6\">Title</label>\r\n                {errors?.title && (\r\n                <span className=\"text-danger\"> {errors?.title?.message}</span>\r\n                )}\r\n                <input\r\n                onChange={(e) => {\r\n                    handleOnChange(e);\r\n                }}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={product.title} // \"value\" triggering the change from state. putting in the value into the field\r\n                name=\"title\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"h6\">Description</label>\r\n                {errors?.description && (\r\n                <span className=\"text-danger\"> {errors?.description?.message}</span>\r\n                )}\r\n                <input\r\n                onChange={(e) => {\r\n                    handleOnChange(e);\r\n                }}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={product.description}\r\n                name=\"description\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"h6\">Price</label>\r\n                {errors?.src && (\r\n                <span className=\"text-danger\"> {errors?.price?.message}</span>\r\n                )}\r\n                <input\r\n                onChange={(e) => {\r\n                    handleOnChange(e);\r\n                }}\r\n                type=\"number\"\r\n                className=\"form-control\"\r\n                value={product.price}\r\n                name=\"price\"\r\n                />\r\n            </div>\r\n            <button className=\"btn btn-sm btn-success m-2 btn-outline\">Update</button>\r\n            <button onClick ={routeChange} className=\"btn btn-sm btn-danger m-2 btn-outline\">Cancel</button>\r\n            </form>\r\n        </div>\r\n        );\r\n};\r\n\r\nexport default EditProduct;","\nimport './App.css';\nimport { Link, Route, Switch, Redirect} from 'react-router-dom'\nimport NewProduct from './Components/NewProduct'\nimport ProductList from './Components/ProductList';\nimport OneProduct from './Components/OneProduct';\nimport EditProduct from './Components/EditProduct';\n// import NotFound from \"./views/NotFound\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <nav className=\" d-flex col col-8 flex-column container p-3 my-3 bg-dark text-white rounded shadow\">\n        <h1 className=\"fs-1 navbar-brand mb-0 mx-auto\">Product Manager</h1>\n        <div className=\"d-flex justify-content-center text-justify\">\n          <Link\n            to=\"/products/all\"\n            className=\"col col-2 btn btn-sm btn-success m-2 btn-outline \"\n          >\n            All Products\n          </Link>\n\n          <Link\n            to=\"/products\"\n            className=\"col col-3 btn btn-sm btn-success m-2 btn-outline\"\n          >\n            Add New Product\n          </Link>\n        </div>\n      </nav>\n\n      <Switch>\n \n        <Redirect exact from=\"/\" to=\"/products\" />\n        <Route exact path=\"/products\">\n          <NewProduct />\n        </Route>\n        <Route exact path=\"/products/all\">\n          <ProductList />\n        </Route>\n        <Route exact path=\"/products/:id\">\n          <OneProduct />\n        </Route>\n        <Route exact path=\"/products/:id/edit\">\n          <EditProduct />\n        </Route>\n        {/* <Route component={NotFound} /> */}\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}